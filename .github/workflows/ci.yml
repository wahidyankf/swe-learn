name: CI

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  actions: read
  contents: read

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # This enables task distribution via Nx Cloud
      # Run this command as early as possible, before dependencies are installed
      # Learn more at https://nx.dev/ci/reference/nx-cloud-cli#npx-nxcloud-startcirun
      # Uncomment this line to enable task distribution
      # - run: npx nx-cloud start-ci-run --distribute-on="3 linux-medium-js" --stop-agents-after="build"

      # Set up Java and Maven
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
          maven-version: '3.9.6'

      # Install google-java-format
      - name: Install google-java-format
        run: |
          curl -L https://github.com/google/google-java-format/releases/download/v1.19.2/google-java-format-1.19.2-all-deps.jar -o /usr/local/bin/google-java-format.jar
          echo '#!/bin/bash' > /usr/local/bin/google-java-format
          echo 'java -jar /usr/local/bin/google-java-format.jar "$@"' >> /usr/local/bin/google-java-format
          chmod +x /usr/local/bin/google-java-format

      # Set up Python
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      # Install Poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.7.1
          virtualenvs-create: true
          virtualenvs-in-project: true

      # Set up Go
      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          cache: true

      # Install Go dependencies
      - name: Install Go dependencies
        run: |
          cd libs/go-hello-libs && go mod tidy
          cd ../../apps/go-hello && go mod tidy

      # Cache node_modules
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - run: npm ci --legacy-peer-deps
      - uses: nrwl/nx-set-shas@v4

      # Install xmllint
      - name: Install xmllint
        run: sudo apt-get update && sudo apt-get install -y libxml2-utils

      # Build and test Java projects
      - name: Setup Maven Wrapper for Java libraries
        run: |
          cd libs/java-hello-libs
          mvn -N io.takari:maven:wrapper
          cd ../..

      - name: Setup Maven Wrapper for Java applications  
        run: |
          cd apps/java-hello
          mvn -N io.takari:maven:wrapper
          cd ../..

      - name: Validate Maven projects
        run: |
          cd libs/java-hello-libs
          ./mvnw validate
          cd ../../apps/java-hello
          ./mvnw validate
          cd ../..

      - name: Build and test Java libraries
        run: |
          cd libs/java-hello-libs
          ./mvnw clean verify
          cd ../..

      - name: Build and test Java applications
        run: |
          cd apps/java-hello
          ./mvnw clean verify
          cd ../..

      # Format check Java and XML files
      - name: Check Java and XML formatting
        run: |
          # Check Java files
          find . -name "*.java" -type f -exec google-java-format --dry-run --set-exit-if-changed {} \;
          
          # Check XML files
          find . -name "*.xml" -type f -exec xmllint --format --output {} {} \;
          git diff --exit-code || (echo "XML files are not properly formatted" && exit 1)

      # Prepend any command with "nx-cloud record --" to record its logs to Nx Cloud
      # - run: npx nx-cloud record -- echo Hello World
      # Nx Affected runs only tasks affected by the changes in this PR/commit. Learn more: https://nx.dev/ci/features/affected
      - run: npx nx affected -t lint test build typecheck
